{"version":3,"sources":["webpack:///./src/pages/cbt/primary.jsx"],"names":["Button","props","className","style","margin","backgroundColor","color","onClick","index","Primary","auth","M","db","changeSubject","e","persist","setState","subject","target","value","checkSubject","state","console","log","document","getElementById","display","innerHTML","activeHandler","p","active","question","answer","optionA","optionB","optionC","optionD","optionE","optionAChecked","optionBChecked","optionCChecked","optionDChecked","optionEChecked","id","changeHandler","idForQuestion","tempQuestion","questions","filter","questionsNotToBeChanged","map","temp","answers","push","submitExam","correct","i","length","alert","clearState","componentDidMount","lazyFirebase","lazyAuthentication","lazyFirestore","Promise","all","then","firebase","getFirebase","firestore","onAuthStateChanged","user","loggedOutContent","querySelectorAll","loggedInContent","forEach","content","ant","collection","get","snapshot","doc","data","catch","error","querySelector","message","render","this","name","type","vlaue","height","checked","onChange","to","marginRight","position","bottom","key","Component"],"mappings":"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","file":"component---src-pages-cbt-primary-jsx-3d350fd07058899ad830.js","sourcesContent":["import React, { Component } from \"react\"\r\nimport { Link } from \"gatsby\";\r\nimport \"materialize-css/dist/css/materialize.min.css\";\r\nimport \"../../styles/global.css\";\r\nimport Nav from \"../../components/navigation/Nav\";\r\nimport { getFirebase } from \"../../components/firebase.js\";\r\n\r\n//used in check subject function\r\nlet sub;\r\n\r\nconst Button = (props) => {\r\n    return (\r\n        <button className=\"btn\" style={{ margin: \"2px\", backgroundColor: `${props.color}`, color: \"black\" }} onClick={props.onClick}>{props.index + 1}</button>\r\n    );\r\n}\r\n\r\nclass Primary extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            subject: \"default\",\r\n            questions: [],\r\n            active: {},\r\n            answers: [],\r\n            value: \"\"\r\n        }\r\n\r\n    }\r\n    auth;\r\n    M;\r\n    db;\r\n    changeSubject = (e) => {\r\n        e.persist();\r\n        this.setState({\r\n            subject: e.target.value\r\n        })\r\n    }\r\n\r\n    checkSubject = () => {\r\n        if (this.state.subject !== \"default\") {\r\n            console.log(\"i should always run\")\r\n            sub = this.state.subject;\r\n            document.getElementById(\"subjectSelector\").style.display = \"none\";\r\n            document.getElementById(\"questionsPage\").style.display = \"block\";\r\n            document.getElementById(\"error\").style.display = \"none\";\r\n        } else {\r\n            console.log(\"i shouldn't run\")\r\n            document.getElementById(\"error\").style.display = \"block\";\r\n            document.getElementById(\"error\").innerHTML = \"please select a subject to proceed\"\r\n        }\r\n\r\n    }\r\n\r\n    componentDidMount() {\r\n\r\n\r\n        const getQuestions = () => {\r\n            let id = 0;\r\n            let questions = [];\r\n            var docRef = this.state.db.collection(\"economics\");\r\n            //var docRef = db.collection(\"questions\").doc(`senior_secondary`).collection(`${this.state.subject}`);\r\n            docRef.get()\r\n                .then(snapshot => {\r\n                    console.log(\"65\", snapshot)\r\n                    //gets the documents\r\n                    snapshot.forEach(doc => {\r\n                        console.log(\"68\", doc.data())\r\n                        let temp = doc.data()\r\n                        temp.id = id++;\r\n                        temp.optionAChecked = false;\r\n                        temp.optionBChecked = false;\r\n                        temp.optionCChecked = false;\r\n                        temp.optionDChecked = false;\r\n                        temp.optionEChecked = false;\r\n                        temp.color = \"white\";\r\n                        questions.push(temp);\r\n                    });\r\n                    //sets the state\r\n                    console.log(questions)\r\n                    this.setState({\r\n                        questions: questions, active: questions[0]\r\n                    })\r\n                })\r\n                .catch(error => {\r\n                    document.querySelector(\"#error\").style.display = \"block\";\r\n                    document.querySelector(\"#error-text\").innerHTML = `${error.message}`;\r\n                })\r\n        }\r\n\r\n        const lazyFirebase = import(\"firebase/app\");\r\n        const lazyAuthentication = import(\"firebase/firebase-auth\");\r\n        const lazyFirestore = import(\"firebase/firebase-firestore\");\r\n        Promise.all([lazyFirebase, lazyAuthentication, lazyFirestore])\r\n            .then((firebase) => {\r\n                console.log(\"i am in promise\")\r\n                this.auth = getFirebase(firebase).auth();\r\n                this.db = getFirebase(firebase).firestore();\r\n                this.setState({ db: this.db })\r\n                console.log(this.db)\r\n                this.auth.onAuthStateChanged(user => {\r\n                    const loggedOutContent = document.querySelectorAll(\".logged-out\");\r\n                    const loggedInContent = document.querySelectorAll(\".logged-in\");\r\n                    if (user) {\r\n                        loggedInContent.forEach(content => {\r\n                            content.style.display = \"block\"\r\n                        })\r\n                        loggedOutContent.forEach(content => {\r\n                            content.style.display = \"none\"\r\n                        })\r\n                    } else {\r\n                        loggedOutContent.forEach(content => {\r\n                            content.style.display = \"block\"\r\n                        })\r\n                        loggedInContent.forEach(content => {\r\n                            content.style.display = \"none\"\r\n                        })\r\n                    }\r\n                })\r\n                return (\"abc\");\r\n            }).then(ant => { getQuestions(); })\r\n        //getQuestions();\r\n    }\r\n\r\n    activeHandler = (p) => {\r\n        this.setState({\r\n            active: {\r\n                question: p.question,\r\n                answer: p.answer,\r\n                optionA: p.optionA,\r\n                optionB: p.optionB,\r\n                optionC: p.optionC,\r\n                optionD: p.optionD,\r\n                optionE: p.optionE,\r\n                optionAChecked: p.optionAChecked,\r\n                optionBChecked: p.optionBChecked,\r\n                optionCChecked: p.optionCChecked,\r\n                optionDChecked: p.optionDChecked,\r\n                optionEChecked: p.optionEChecked,\r\n                color: p.color,\r\n                id: p.id\r\n            }\r\n        })\r\n    }\r\n\r\n    changeHandler = (e, idForQuestion) => {\r\n        e.persist();\r\n        //sets the state first\r\n        this.setState({ value: e.target.value }, () => {\r\n            //this part is for getting the question which the user is working on\r\n            let tempQuestion = this.state.questions.filter(question => question.id === idForQuestion)\r\n            //this part destructs the question to pass the options into the switch block below to set their boolean values\r\n            const { optionA, optionB, optionC, optionD, optionE, } = tempQuestion[0];\r\n            //this sets the boolean for the options and the color for answered bitton navigation\r\n            switch (e.target.value) {\r\n                case optionA:\r\n                    tempQuestion[0].optionAChecked = true;\r\n                    tempQuestion[0].optionBChecked = false;\r\n                    tempQuestion[0].optionCChecked = false;\r\n                    tempQuestion[0].optionDChecked = false;\r\n                    tempQuestion[0].optionEChecked = false;\r\n                    tempQuestion[0].color = \"rgb(38, 166, 154)\";\r\n                    break;\r\n                case optionB:\r\n                    tempQuestion[0].optionAChecked = false;\r\n                    tempQuestion[0].optionBChecked = true;\r\n                    tempQuestion[0].optionCChecked = false;\r\n                    tempQuestion[0].optionDChecked = false;\r\n                    tempQuestion[0].optionEChecked = false;\r\n                    tempQuestion[0].color = \"rgb(38, 166, 154)\";\r\n                    break;\r\n                case optionC:\r\n                    tempQuestion[0].optionAChecked = false;\r\n                    tempQuestion[0].optionBChecked = false;\r\n                    tempQuestion[0].optionCChecked = true;\r\n                    tempQuestion[0].optionDChecked = false;\r\n                    tempQuestion[0].optionEChecked = false;\r\n                    tempQuestion[0].color = \"rgb(38, 166, 154)\";\r\n                    break;\r\n                case optionD:\r\n                    tempQuestion[0].optionAChecked = false;\r\n                    tempQuestion[0].optionBChecked = false;\r\n                    tempQuestion[0].optionCChecked = false;\r\n                    tempQuestion[0].optionDChecked = true;\r\n                    tempQuestion[0].optionEChecked = false;\r\n                    tempQuestion[0].color = \"rgb(38, 166, 154)\";\r\n                    break;\r\n                case optionE:\r\n                    tempQuestion[0].optionAChecked = false;\r\n                    tempQuestion[0].optionBChecked = false;\r\n                    tempQuestion[0].optionCChecked = false;\r\n                    tempQuestion[0].optionDChecked = false;\r\n                    tempQuestion[0].optionEChecked = true;\r\n                    tempQuestion[0].color = \"rgb(38, 166, 154)\";\r\n                    break;\r\n                default:\r\n                    console.log(\"i don't expect you to run\");\r\n                    break;\r\n            }\r\n\r\n            /*\r\n                this sets the questions\r\n                1. it loops through all the questions in state\r\n                2. checkes for questions whose id dosent match that of the current question and return them\r\n                3. if it matches, it returns the tempQuestion[0] variable\r\n            */\r\n\r\n            let questionsNotToBeChanged = this.state.questions.map(question => {\r\n\r\n                if (question.id !== idForQuestion) {\r\n                    return question;\r\n                } else { return tempQuestion[0] }\r\n            })\r\n\r\n            //this part is for setting answers\r\n            let temp = this.state.answers.filter(answer => answer.id !== idForQuestion);\r\n            temp.push({ answer: e.target.value, id: idForQuestion });\r\n\r\n            //this is for setting the answers, questions and active together in state\r\n            this.setState({ answers: temp, questions: questionsNotToBeChanged, active: tempQuestion[0] })\r\n        })\r\n    }\r\n\r\n    submitExam = () => {\r\n        let correct = 0;\r\n        //console.log(\"answers\", this.state.answers)\r\n        for (let i = 0; i < this.state.answers.length; i++) {\r\n            this.state.questions.map((question) => {\r\n                if (this.state.answers[i].id === question.id) {\r\n                    if (this.state.answers[i].answer === question.answer) { correct += 1 }\r\n                }\r\n            })\r\n        }\r\n\r\n        alert(correct);\r\n        this.clearState();\r\n    }\r\n\r\n    clearState = () => {\r\n        this.setState({\r\n            answers: [], questions: [], value: \"\"\r\n        })\r\n    }\r\n\r\n    render() {\r\n        // this.auth.onAuthStateChanged(user => {\r\n        //     const loggedOutContent = document.querySelectorAll(\".loggedOutContent\");\r\n        //     const loggedInContent = document.querySelectorAll(\".loggedInContent\");\r\n        //     if (user) {\r\n        //         loggedInContent.forEach(content => {\r\n        //             content.style.display = \"block\"\r\n        //         })\r\n        //         loggedOutContent.forEach(content => {\r\n        //             content.style.display = \"none\"\r\n        //         })\r\n        //     } else {\r\n        //         loggedOutContent.forEach(content => {\r\n        //             content.style.display = \"block\"\r\n        //         })\r\n        //         document.getElementById(\"error-text\").innerHTML = \"Please Login To view this page\"\r\n        //         loggedInContent.forEach(content => {\r\n        //             content.style.display = \"none\"\r\n        //         })\r\n        //     }\r\n        // })\r\n        const { question, optionA, optionB, optionC, optionD, optionE, id, optionAChecked, optionBChecked, optionCChecked, optionDChecked, optionEChecked } = this.state.active;\r\n        return (\r\n            <>\r\n                <div className=\"loggedInContent\">\r\n                    <Nav />\r\n                    <div className=\"container\">\r\n\r\n                        {/* display error here */}\r\n                        <div id=\"error\" className=\"center-align card-panel red loggedOutContent\" style={{ display: \"none\" }}>\r\n                            <span id=\"error-text\" className=\"center-align white-text\"></span>\r\n                        </div>\r\n\r\n                        <div id=\"subjectSelector\">\r\n                            <h5 className=\"center-align\">Primary</h5>\r\n                            <p>select the subject you want to take</p>\r\n                            <form>\r\n                                <p style={{ margin: \"10px\" }}>\r\n                                    <label>\r\n                                        <input className=\"subject\" value=\"Agricultural science\" name=\"subject\" type=\"radio\" />\r\n                                        <span>Agricultural science</span>\r\n                                    </label>\r\n                                </p>\r\n                                <p style={{ margin: \"10px\" }}>\r\n                                    <label>\r\n                                        <input className=\"subject\" vlaue=\"Business Studies\" name=\"subject\" type=\"radio\" />\r\n                                        <span>Business Studies</span>\r\n                                    </label>\r\n                                </p>\r\n                                <p style={{ margin: \"10px\" }}>\r\n                                    <label>\r\n                                        <input className=\"subject\" onClick={(e) => { this.changeSubject(e) }} value=\"biology\" name=\"subject\" type=\"radio\" />\r\n                                        <span>Biology</span>\r\n                                    </label>\r\n                                </p>\r\n                                <p style={{ margin: \"10px\" }}>\r\n                                    <label>\r\n                                        <input className=\"subject\" onClick={(e) => { this.changeSubject(e) }} value=\"Computer\" name=\"subject\" type=\"radio\" />\r\n                                        <span>Computer</span>\r\n                                    </label>\r\n                                </p>\r\n                                <p style={{ margin: \"10px\" }}>\r\n                                    <label>\r\n                                        <input className=\"subject\" onClick={(e) => { this.changeSubject(e) }} value=\"economics\" name=\"subject\" type=\"radio\" />\r\n                                        <span>Economics</span>\r\n                                    </label>\r\n                                </p>\r\n                                <p style={{ margin: \"10px\" }}>\r\n                                    <label>\r\n                                        <input className=\"subject\" onClick={(e) => { this.changeSubject(e) }} value=\"English Language\" name=\"subject\" type=\"radio\" />\r\n                                        <span>English Language</span>\r\n                                    </label>\r\n                                </p>\r\n                                <p style={{ margin: \"10px\" }}>\r\n                                    <label>\r\n                                        <input className=\"subject\" onClick={(e) => { this.changeSubject(e) }} value=\"French\" name=\"subject\" type=\"radio\" />\r\n                                        <span>French</span>\r\n                                    </label>\r\n                                </p>\r\n                                <p style={{ margin: \"10px\" }}>\r\n                                    <label>\r\n                                        <input className=\"subject\" onClick={(e) => { this.changeSubject(e) }} value=\"Geography\" name=\"subject\" type=\"radio\" />\r\n                                        <span>Geography</span>\r\n                                    </label>\r\n                                </p>\r\n                                <p style={{ margin: \"10px\" }}>\r\n                                    <label>\r\n                                        <input className=\"subject\" onClick={(e) => { this.changeSubject(e) }} value=\"Government\" name=\"subject\" type=\"radio\" />\r\n                                        <span>Government</span>\r\n                                    </label>\r\n                                </p>\r\n                                <p style={{ margin: \"10px\" }}>\r\n                                    <label>\r\n                                        <input className=\"subject\" onClick={(e) => { this.changeSubject(e) }} value=\"History\" name=\"subject\" type=\"radio\" />\r\n                                        <span>History</span>\r\n                                    </label>\r\n                                </p>\r\n                                <p style={{ margin: \"10px\" }}>\r\n                                    <label>\r\n                                        <input className=\"subject\" onClick={(e) => { this.changeSubject(e) }} value=\"Mathematics\" name=\"subject\" type=\"radio\" />\r\n                                        <span>Mathematics</span>\r\n                                    </label>\r\n                                </p>\r\n                            </form>\r\n                            <button className=\"btn\" onClick={this.checkSubject}>Start <i className=\"material-icons right\">send</i></button>\r\n                        </div>\r\n\r\n\r\n                        <div id=\"questionsPage\" style={{ display: \"none\" }}>\r\n\r\n\r\n                            <div style={{ height: \"100vh\" }} className=\"loggedInContent\">\r\n                                <h5 className=\"center-align\">Question {id + 1}</h5>\r\n                                <p className=\"center-align\">{question}</p>\r\n                                <form>\r\n                                    <p>\r\n                                        <label>\r\n                                            <input className=\"with-gap\" name=\"options\" checked={optionAChecked} value={optionA} type=\"radio\" onChange={(e) => { this.changeHandler(e, id) }} />\r\n                                            <span id=\"optionA\">{optionA}</span>\r\n                                        </label>\r\n                                    </p>\r\n                                    <p>\r\n                                        <label>\r\n                                            <input className=\"with-gap\" name=\"options\" checked={optionBChecked} value={optionB} type=\"radio\" onChange={(e) => { this.changeHandler(e, id) }} />\r\n                                            <span id=\"optionB\">{optionB}</span>\r\n                                        </label>\r\n                                    </p>\r\n                                    <p>\r\n                                        <label>\r\n                                            <input className=\"with-gap\" name=\"options\" checked={optionCChecked} value={optionC} type=\"radio\" onChange={(e) => { this.changeHandler(e, id) }} />\r\n                                            <span id=\"optionC\">{optionC}</span>\r\n                                        </label>\r\n                                    </p>\r\n                                    <p>\r\n                                        <label>\r\n                                            <input className=\"with-gap\" name=\"options\" checked={optionDChecked} value={optionD} type=\"radio\" onChange={(e) => { this.changeHandler(e, id) }} />\r\n                                            <span id=\"optionD\">{optionD}</span>\r\n                                        </label>\r\n                                    </p>\r\n                                    <p>\r\n                                        <label>\r\n                                            <input className=\"with-gap\" name=\"options\" checked={optionEChecked} value={optionE} type=\"radio\" onChange={(e) => { this.changeHandler(e, id) }} />\r\n                                            <span id=\"optionE\">{optionE}</span>\r\n                                        </label>\r\n                                    </p>\r\n                                </form>\r\n\r\n                                <div className=\"center-align\">\r\n                                    <Link to=\"/\"><button className=\"btn\" onClick={this.submitExam} style={{ marginRight: \"20px\" }}>Submit</button></Link>\r\n                                    <Link to=\"/\"><button className=\"btn\" onClick={this.clearState}>Quit</button></Link>\r\n                                </div>\r\n                                <div className=\"row\" style={{ position: \"fixed\", bottom: \"0px\" }}>\r\n                                    {this.state.questions.map((question, index) => (\r\n                                        <Button index={index} color={question.color} key={question.id} question={question} onClick={() => { this.activeHandler(question) }} />\r\n                                    ))}\r\n                                </div>\r\n                            </div>\r\n\r\n                        </div>\r\n\r\n                    </div>\r\n\r\n                </div>\r\n                <div className=\"loggedOutContent container\">\r\n                    <div className=\"card-panel red\">\r\n                        <span>Please login to view this page</span>\r\n                    </div>\r\n                </div>\r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Primary;"],"sourceRoot":""}